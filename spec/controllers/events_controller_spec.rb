require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe EventsController do
  include Devise::TestHelpers

  before do
    user = User.new name: 'Test User', email: 'example@example.com', password: 'changeme', password_confirmation: 'changeme'#, confirmed_at: 1.minute.ago
    user.skip_confirmation!
    user.save
    sign_in user

    @event = Event.create(name: 'weekly event', start_time: Time.utc(2014, 1, 3, 0).in_time_zone)
  end
  it "can retrieve an event" do
    Connectors::Meetup.stub(:events) { [double(name: 'weekly event', time: DateTime.new(2014,1,2,19,0,0,'-5'))] }
    get :show, id: @event.id, format: :json
    event = assigns[:event]
    event.name.should == 'weekly event'
    response.body.should == EventSerializer.new(event).to_json
  end

end
